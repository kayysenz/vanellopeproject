// =========================================
// üîß KONFIGURASI
// =========================================
var TOKEN = "ISI_TOKEN_BOT_KAMU_DI_SINI";               // Token bot Telegram
var SPREADSHEET_ID = "ISI_SPREADSHEET_ID_KAMU_DI_SINI"; // ID Spreadsheet
var SHEET_NAME = "Sheet1";                              // Nama Sheet
var GROUP_ID = -1001234567890;                          // ID grup Telegram

// =========================================
// üöÄ FUNGSI UTAMA (TERIMA & PROSES PESAN)
// =========================================
function doPost(e) {
  try {
    const update = JSON.parse(e.postData.contents);
    const msg = update.message;
    if (!msg) return;

    // Hanya proses dari grup tertentu
    if (msg.chat && msg.chat.id !== GROUP_ID) return;

    // Pastikan pesan berisi media (foto / video / gif)
    const hasMedia = msg.video || msg.photo || msg.animation;
    if (!hasMedia) return;

    const caption = msg.caption;
    if (!caption) return;

    // ‚úÖ Regex fleksibel (boleh ada spasi di antara kode, /, dan angka)
    const pattern = /^\s*([A-Z0-9]+)\s*\/\s*(\d+)\s*$/i;
    const match = caption.match(pattern);
    if (!match) return;

    // Ambil data dari caption
    const kodeUser = match[1].toUpperCase(); // contoh: T01
    const point = parseInt(match[2]);        // contoh: 303

    // Tentukan tipe media
    const mediaType = msg.video
      ? "Video"
      : msg.photo
      ? "Photo"
      : msg.animation
      ? "GIF"
      : "Unknown";

    // Simpan ke spreadsheet
    const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
    const sheet = ss.getSheetByName(SHEET_NAME);
    sheet.appendRow([
      new Date(),   // kolom A: waktu input
      kodeUser,     // kolom B: kode user
      point,        // kolom C: poin
      mediaType,    // kolom D: tipe media
    ]);

    // ‚úÖ Siapkan mention username
    let userTag = "";
    if (msg.from.username) {
      userTag = "@" + msg.from.username;
    } else if (msg.from.first_name) {
      userTag = msg.from.first_name;
    } else {
      userTag = "User";
    }

    // ‚úÖ Kirim respon ke grup (konfirmasi input berhasil)
    const textReply = `${userTag} Report - ${point} Point\nDone input ü§ô`;
    sendTelegramMessage(GROUP_ID, textReply);

  } catch (err) {
    Logger.log("‚ùå Error: " + err);
  }
}

// =========================================
// üì© FUNGSI UNTUK KIRIM PESAN KE TELEGRAM
// =========================================
function sendTelegramMessage(chatId, text) {
  const url = `https://api.telegram.org/bot${TOKEN}/sendMessage`;
  const payload = {
    chat_id: chatId,
    text: text,
    parse_mode: "HTML",
  };
  const options = {
    method: "post",
    contentType: "application/json",
    payload: JSON.stringify(payload),
  };
  UrlFetchApp.fetch(url, options);
}

// =========================================
// ‚öôÔ∏è FUNGSI SET & DELETE WEBHOOK
// =========================================
function setWebhook() {
  const url = ScriptApp.getService().getUrl();
  const response = UrlFetchApp.fetch(
    `https://api.telegram.org/bot${TOKEN}/setWebhook?url=${url}`
  );
  Logger.log("üì° Webhook response: " + response.getContentText());
}

function deleteWebhook() {
  const response = UrlFetchApp.fetch(
    `https://api.telegram.org/bot${TOKEN}/deleteWebhook`
  );
  Logger.log("üßπ Webhook deleted: " + response.getContentText());
}
